import org.gradle.plugins.ide.eclipse.model.AbstractLibrary;
import org.gradle.plugins.ide.eclipse.model.internal.FileReferenceFactory;

apply plugin: 'eclipse'

eclipse {
	project { name = 'yuzen' }
	classpath {
		containers = [
			'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
		]
		defaultOutputDir = file('bin')
		file {
			whenMerged {
				def src = new File(gradle.gradleHomeDir.absolutePath, 'src')
				def ref = new FileReferenceFactory().fromFile(src)
				it.entries.findAll {
					it in AbstractLibrary && it.library.file.name.startsWith('gradle-')
				} each { it.sourcePath = ref }
			}
			withXml {
				def n = it.asNode()
				def gp = [
					'GROOVY_SUPPORT',
					'GROOVY_DSL_SUPPORT'
				]
				n.children().removeAll { gp.contains(it.@path) || it.@path == 'src/resources' }
				// 単純にsortするとgradle周りのアレソレが高い優先順位に移動しがち
				// n.children().sort { it.@path.split('/').last() }

				gp.each {
					n.appendNode 'classpathentry', [kind: 'con', path: it]
				}
			}
		}
	}
}
